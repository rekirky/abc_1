create   proc [stage].[prcLoadLedgerJournalTable] as 
begin 
--This proc is automatically created by [etl].[prcMaterializeExternalData]

DELETE t from dbo.LedgerJournalTable t 
where exists 
	(select 1 from stage.LedgerJournalTable s 
	 where s.recid=t.recid 
		and (s.DML_Action='DELETE')
		and isnull(t.LSN,'')<isnull(s.Start_LSN,'')--delete the older record
	)

MERGE dbo.LedgerJournalTable with(tablock) as t
using (select * from blobTransInc.LedgerJournalTable where DML_Action<>'DELETE' and Instance=1) as s
on (s.recid=t.recid)
when matched then update set 
	[Approver]=s.[Approver],[AssetLeaseProcessId]=s.[AssetLeaseProcessId],[AssetTransferType_LT]=s.[AssetTransferType_LT],[AssetTransferType_LTEnumID]=s.[AssetTransferType_LTEnumID],[BankAccountId]=s.[BankAccountId],[BankRemittanceType]=s.[BankRemittanceType],[BankRemittanceTypeEnumID]=s.[BankRemittanceTypeEnumID],[CREATEDBY]=s.[CREATEDBY],[CurrencyCode]=s.[CurrencyCode],[CurrentOperationsTax]=s.[CurrentOperationsTax],[CurrentOperationsTaxEnumID]=s.[CurrentOperationsTaxEnumID],[CustVendNegInstProtestProcess]=s.[CustVendNegInstProtestProcess],[CustVendNegInstProtestProcessEnumID]=s.[CustVendNegInstProtestProcessEnumID],[DataAreaId]=s.[DataAreaId],[DataLakeModified_DateTime]=s.[DataLakeModified_DateTime],[DefaultDimension]=s.[DefaultDimension],[DelayTaxCalculation]=s.[DelayTaxCalculation],[DelayTaxCalculationFlag]=s.[DelayTaxCalculationFlag],[DetailSummaryPosting]=s.[DetailSummaryPosting],[DetailSummaryPostingEnumID]=s.[DetailSummaryPostingEnumID],[DocumentNum]=s.[DocumentNum],[EndBalance]=s.[EndBalance],[EUROTriangulation]=s.[EUROTriangulation],[ExchRate]=s.[ExchRate],[ExchrateSecondary]=s.[ExchrateSecondary],[FixedExchRate]=s.[FixedExchRate],[FixedOffsetAccount]=s.[FixedOffsetAccount],[GroupBlockId]=s.[GroupBlockId],[IntegrationKey]=s.[IntegrationKey],[InUseBy]=s.[InUseBy],[IsAdjustmentJournal]=s.[IsAdjustmentJournal],[IsAdjustmentJournalFlag]=s.[IsAdjustmentJournalFlag],[IsLedgerDimensionNameUpdated]=s.[IsLedgerDimensionNameUpdated],[IsLedgerDimensionNameUpdatedFlag]=s.[IsLedgerDimensionNameUpdatedFlag],[JournalBalance]=s.[JournalBalance],[JournalName]=s.[JournalName],[JournalNum]=s.[JournalNum],[JournalTotalCredit]=s.[JournalTotalCredit],[JournalTotalCreditReportingCurrency]=s.[JournalTotalCreditReportingCurrency],[JournalTotalDebit]=s.[JournalTotalDebit],[JournalTotalDebitReportingCurrency]=s.[JournalTotalDebitReportingCurrency],[journalTotalOffsetBalance]=s.[journalTotalOffsetBalance],[JournalType]=s.[JournalType],[JournalTypeEnumID]=s.[JournalTypeEnumID],[LedgerJournalInclTax]=s.[LedgerJournalInclTax],[LinesLimitBeforeDistribution]=s.[LinesLimitBeforeDistribution],[Log]=s.[Log],[MODIFIEDBY]=s.[MODIFIEDBY],[Name]=s.[Name],[NumberSequenceTable]=s.[NumberSequenceTable],[NumOfLines]=s.[NumOfLines],[OffsetAccountType]=s.[OffsetAccountType],[OffsetAccountTypeEnumID]=s.[OffsetAccountTypeEnumID],[OffsetLedgerDimension]=s.[OffsetLedgerDimension],[OriginalCompany]=s.[OriginalCompany],[OriginalJournalNum]=s.[OriginalJournalNum],[OverrideSalesTax]=s.[OverrideSalesTax],[PARTITION]=s.[PARTITION],[PaymentsGenerated_IT]=s.[PaymentsGenerated_IT],[PaymentsGenerated_ITFlag]=s.[PaymentsGenerated_ITFlag],[Posted]=s.[Posted],[PostedDateTime]=s.[PostedDateTime],[POSTEDDATETIMETZID]=s.[POSTEDDATETIMETZID],[ProtestSettledBill]=s.[ProtestSettledBill],[RECID]=s.[RECID],[RECVERSION]=s.[RECVERSION],[RejectedBy]=s.[RejectedBy],[REMOVELINEAFTERPOSTING]=s.[REMOVELINEAFTERPOSTING],[ReportedAsReadyBy]=s.[ReportedAsReadyBy],[ReportingCurrencyExchRate]=s.[ReportingCurrencyExchRate],[ReportingCurrencyExchRateSecondary]=s.[ReportingCurrencyExchRateSecondary],[ReportingCurrencyFixedExchRate]=s.[ReportingCurrencyFixedExchRate],[RetailStatementId]=s.[RetailStatementId],[ReverseDate]=s.[ReverseDate],[ReverseEntry]=s.[ReverseEntry],[ReverseEntryFlag]=s.[ReverseEntryFlag],[RevRecReallocationId]=s.[RevRecReallocationId],[SessionId]=s.[SessionId],[SessionLoginDateTime]=s.[SessionLoginDateTime],[SESSIONLOGINDATETIMETZID]=s.[SESSIONLOGINDATETIMETZID],[SimulationPosted_IT]=s.[SimulationPosted_IT],[SimulationPosted_ITFlag]=s.[SimulationPosted_ITFlag],[SystemBlocked]=s.[SystemBlocked],[TaxObligationCompany]=s.[TaxObligationCompany],[TaxObligationCompanyEnumID]=s.[TaxObligationCompanyEnumID],[UserBlockId]=s.[UserBlockId],[VoucherAllocatedAtPosting]=s.[VoucherAllocatedAtPosting],[WorkflowApprovalStatus]=s.[WorkflowApprovalStatus],[WorkflowApprovalStatusEnumID]=s.[WorkflowApprovalStatusEnumID]
when not matched then insert(
	[Approver],[AssetLeaseProcessId],[AssetTransferType_LT],[AssetTransferType_LTEnumID],[BankAccountId],[BankRemittanceType],[BankRemittanceTypeEnumID],[CREATEDBY],[CurrencyCode],[CurrentOperationsTax],[CurrentOperationsTaxEnumID],[CustVendNegInstProtestProcess],[CustVendNegInstProtestProcessEnumID],[DataAreaId],[DataLakeModified_DateTime],[DefaultDimension],[DelayTaxCalculation],[DelayTaxCalculationFlag],[DetailSummaryPosting],[DetailSummaryPostingEnumID],[DocumentNum],[EndBalance],[EUROTriangulation],[ExchRate],[ExchrateSecondary],[FixedExchRate],[FixedOffsetAccount],[GroupBlockId],[IntegrationKey],[InUseBy],[IsAdjustmentJournal],[IsAdjustmentJournalFlag],[IsLedgerDimensionNameUpdated],[IsLedgerDimensionNameUpdatedFlag],[JournalBalance],[JournalName],[JournalNum],[JournalTotalCredit],[JournalTotalCreditReportingCurrency],[JournalTotalDebit],[JournalTotalDebitReportingCurrency],[journalTotalOffsetBalance],[JournalType],[JournalTypeEnumID],[LedgerJournalInclTax],[LinesLimitBeforeDistribution],[Log],[MODIFIEDBY],[Name],[NumberSequenceTable],[NumOfLines],[OffsetAccountType],[OffsetAccountTypeEnumID],[OffsetLedgerDimension],[OriginalCompany],[OriginalJournalNum],[OverrideSalesTax],[PARTITION],[PaymentsGenerated_IT],[PaymentsGenerated_ITFlag],[Posted],[PostedDateTime],[POSTEDDATETIMETZID],[ProtestSettledBill],[RECID],[RECVERSION],[RejectedBy],[REMOVELINEAFTERPOSTING],[ReportedAsReadyBy],[ReportingCurrencyExchRate],[ReportingCurrencyExchRateSecondary],[ReportingCurrencyFixedExchRate],[RetailStatementId],[ReverseDate],[ReverseEntry],[ReverseEntryFlag],[RevRecReallocationId],[SessionId],[SessionLoginDateTime],[SESSIONLOGINDATETIMETZID],[SimulationPosted_IT],[SimulationPosted_ITFlag],[SystemBlocked],[TaxObligationCompany],[TaxObligationCompanyEnumID],[UserBlockId],[VoucherAllocatedAtPosting],[WorkflowApprovalStatus],[WorkflowApprovalStatusEnumID]
)
values (
[Approver],[AssetLeaseProcessId],[AssetTransferType_LT],[AssetTransferType_LTEnumID],[BankAccountId],[BankRemittanceType],[BankRemittanceTypeEnumID],[CREATEDBY],[CurrencyCode],[CurrentOperationsTax],[CurrentOperationsTaxEnumID],[CustVendNegInstProtestProcess],[CustVendNegInstProtestProcessEnumID],[DataAreaId],[DataLakeModified_DateTime],[DefaultDimension],[DelayTaxCalculation],[DelayTaxCalculationFlag],[DetailSummaryPosting],[DetailSummaryPostingEnumID],[DocumentNum],[EndBalance],[EUROTriangulation],[ExchRate],[ExchrateSecondary],[FixedExchRate],[FixedOffsetAccount],[GroupBlockId],[IntegrationKey],[InUseBy],[IsAdjustmentJournal],[IsAdjustmentJournalFlag],[IsLedgerDimensionNameUpdated],[IsLedgerDimensionNameUpdatedFlag],[JournalBalance],[JournalName],[JournalNum],[JournalTotalCredit],[JournalTotalCreditReportingCurrency],[JournalTotalDebit],[JournalTotalDebitReportingCurrency],[journalTotalOffsetBalance],[JournalType],[JournalTypeEnumID],[LedgerJournalInclTax],[LinesLimitBeforeDistribution],[Log],[MODIFIEDBY],[Name],[NumberSequenceTable],[NumOfLines],[OffsetAccountType],[OffsetAccountTypeEnumID],[OffsetLedgerDimension],[OriginalCompany],[OriginalJournalNum],[OverrideSalesTax],[PARTITION],[PaymentsGenerated_IT],[PaymentsGenerated_ITFlag],[Posted],[PostedDateTime],[POSTEDDATETIMETZID],[ProtestSettledBill],[RECID],[RECVERSION],[RejectedBy],[REMOVELINEAFTERPOSTING],[ReportedAsReadyBy],[ReportingCurrencyExchRate],[ReportingCurrencyExchRateSecondary],[ReportingCurrencyFixedExchRate],[RetailStatementId],[ReverseDate],[ReverseEntry],[ReverseEntryFlag],[RevRecReallocationId],[SessionId],[SessionLoginDateTime],[SESSIONLOGINDATETIMETZID],[SimulationPosted_IT],[SimulationPosted_ITFlag],[SystemBlocked],[TaxObligationCompany],[TaxObligationCompanyEnumID],[UserBlockId],[VoucherAllocatedAtPosting],[WorkflowApprovalStatus],[WorkflowApprovalStatusEnumID]
);

end
GO
